{"version":3,"sources":["theme.ts","AddComment.tsx","App.tsx","index.tsx"],"names":["theme","merge","future","initialColorModeName","useColorSchemeMediaQuery","sizes","container","fonts","heading","body","mono","radii","tiny","small","medium","styles","root","time","fontWeight","color","article","backgroundColor","marginBottom","display","flexDirection","padding","borderRadius","paddingBottom","paddingLeft","textarea","fontFamily","section","overflow","width","p","my","maxWidth","buttons","primary","cursor","transition","transform","textDecoration","messages","alpha","AddComment","onSubmit","useState","comment","setComment","as","e","console","log","preventDefault","content","htmlFor","name","id","rows","placeholder","value","onChange","target","sx","mb","bg","pointerEvents","Comments","postId","useComments","comments","addComment","count","loading","map","author","created_at","status","key","dateTime","dateStr","date","Date","seconds","Math","floor","interval","formatDate","formatStatus","App","rootElement","document","getElementById","render"],"mappings":"oQAgFeA,EA5EMC,YAAMC,IAAiB,CAC1CC,qBAAsB,QACtBC,0BAA0B,EAC1BC,MAAO,CACLC,UAAW,KAEbC,MAAO,CACLC,QAAS,WACTC,KAAM,wBACNC,KAAM,qDAERC,MAAO,CACLC,KAAM,MACNC,MAAO,MACPC,OAAQ,QAEVC,OAAQ,CACNC,KAAM,GACNC,KAAM,CACJC,WAAY,MACZC,MAAO,QAETC,QAAS,CACPC,gBAAiB,QACjBC,aAAc,MACdC,QAAS,OACTC,cAAe,SACfC,QAAS,OACTC,aAAc,MACd,QAAS,CACPH,QAAS,OACTL,WAAY,OACZS,cAAe,MACf,MAAO,CACLT,WAAY,MACZU,YAAa,SAInBC,SAAU,CACRC,WAAY,QAEdC,QAAS,CACPC,SAAU,SACVC,MAAO,QAETC,EAAG,CACDC,GAAI,EACJF,MAAO,OACPG,SAAU,SAGdC,QAAS,CACPC,QAAS,CACPR,WAAY,UACZZ,WAAY,OACZqB,OAAQ,UACRC,WAAY,yBACZ,iBAAkB,CAChBC,UAAW,yBAEb,KAAM,CACJtB,MAAO,aACP,iBAAkB,CAChBuB,eAAgB,WAKxBC,SAAU,CACRL,QAAS,CACPjB,gBAAiBuB,YAAM,YAAa,Q,gBCnE7BC,EAAa,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAC3B,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,YAAC,IAAD,CACEC,GAAG,OACHJ,SAAU,SAAAK,GACRC,QAAQC,IAAI,CAAEF,MACdA,EAAEG,iBACFR,EAAS,CAAES,QAASP,MAItB,YAAC,IAAD,CAAOQ,QAAQ,WAAf,WACA,YAAC,IAAD,CACEC,KAAK,UACLC,GAAG,UACHC,KAAM,EACNC,YAAY,sCACZC,MAAOb,EACPc,SAAU,SAAAX,GAAC,OAAIF,EAAWE,EAAEY,OAAOF,QACnCG,GAAI,CAAEC,GAAI,EAAGnC,WAAY,UAE3B,YAAC,IAAD,CACEkC,GAAE,aACAC,GAAI,IACEjB,GAAY,CAChBkB,GAAI,OACJC,cAAe,UALrB,iBCmBAC,EAAW,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAClB,EAAiDC,sBAC/C,iDACAD,GAFME,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,MAAOC,EAArC,EAAqCA,QAKrC,OACE,uBAASV,GAAI,CAAE/B,MAAO,QACpB,YAAC,EAAD,CAAYa,SAAU0B,IACtB,sBAAe,IAAVC,EAAc,YAAd,UAA+BA,EAA/B,cACJC,EACC,aAEA,uBACGH,EAASI,KAAI,gBAAGC,EAAH,EAAGA,OAAQrB,EAAX,EAAWA,QAASsB,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,OAAhC,OACZ,uBAASC,IAAKF,GACZ,iCACMD,EADN,YAEE,oBAAMI,SAAUH,GA5Db,SAACI,GAClB,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAUC,KAAKC,OAAO,IAAIH,KAASD,GAAQ,KAE7CK,EAAWF,KAAKC,MAAMF,EAAU,SAEpC,OAAIG,EAAW,EACNA,EAAW,cAEpBA,EAAWF,KAAKC,MAAMF,EAAU,SACjB,EACNG,EAAW,eAEpBA,EAAWF,KAAKC,MAAMF,EAAU,QACjB,EACNG,EAAW,aAEpBA,EAAWF,KAAKC,MAAMF,EAAU,OACjB,EACNG,EAAW,cAEpBA,EAAWF,KAAKC,MAAMF,EAAU,KACjB,EACNG,EAAW,eAEQ,IAAxBF,KAAKC,MAAMF,GACN,MAEFC,KAAKC,MAAMF,GAAW,eAgCcI,CAAWX,IACvCC,GAAM,kBA9BF,SAACA,GACpB,OAAQA,GACN,IAAK,QACH,MAAO,eACT,IAAK,8BACH,MAAO,eACT,IAAK,UACH,MAAO,gBAuBoBW,CAAaX,KAEhC,qBAAIvB,UASH,SAASmC,IACtB,OACE,YAAC,IAAD,CAAe1F,MAAOA,GACpB,YAAC,IAAD,KACE,YAAC,IAAD,CAAWgE,GAAI,CAAE9B,EAAG,CAAC,EAAG,KACtB,YAAC,EAAD,CAAUmC,OAAO,yBChF3B,IAAMsB,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,gBAACJ,EAAD,MAASC,K","file":"static/js/main.b0766a11.chunk.js","sourcesContent":["import { future } from \"@theme-ui/presets\";\nimport { Theme, merge } from \"theme-ui\";\nimport { alpha } from \"@theme-ui/color\";\n\nconst theme: Theme = merge(future as Theme, {\n  initialColorModeName: \"light\",\n  useColorSchemeMediaQuery: true,\n  sizes: {\n    container: 800\n  },\n  fonts: {\n    heading: \"PT Serif\",\n    body: \"system-ui, sans-serif\",\n    mono: \"Monolisa, Fira Code, Hasklig, Hack, Menlo, Monaco\"\n  },\n  radii: {\n    tiny: \"4px\",\n    small: \"5px\",\n    medium: \"10px\"\n  },\n  styles: {\n    root: {},\n    time: {\n      fontWeight: \"200\",\n      color: \"gray\"\n    },\n    article: {\n      backgroundColor: \"muted\",\n      marginBottom: \"6px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      padding: \"10px\",\n      borderRadius: \"6px\",\n      \"> div\": {\n        display: \"flex\",\n        fontWeight: \"bold\",\n        paddingBottom: \"6px\",\n        \"> p\": {\n          fontWeight: \"200\",\n          paddingLeft: \"5px\"\n        }\n      }\n    },\n    textarea: {\n      fontFamily: \"body\"\n    },\n    section: {\n      overflow: \"scroll\",\n      width: \"100%\"\n    },\n    p: {\n      my: 2,\n      width: \"70ch\",\n      maxWidth: \"100%\"\n    }\n  },\n  buttons: {\n    primary: {\n      fontFamily: \"inherit\",\n      fontWeight: \"bold\",\n      cursor: \"pointer\",\n      transition: \"transform 150ms linear\",\n      \":hover, :focus\": {\n        transform: \"translateY(-0.125rem)\"\n      },\n      \"&&\": {\n        color: \"background\",\n        \":hover, :focus\": {\n          textDecoration: \"none\"\n        }\n      }\n    }\n  },\n  messages: {\n    primary: {\n      backgroundColor: alpha(\"secondary\", 0.2)\n    }\n  }\n});\n\nexport default theme;\n","/** @jsx jsx */\nimport { useState } from \"react\";\nimport { Comment } from \"use-comments\";\nimport { Box, Button, Label, Textarea, jsx } from \"theme-ui\";\n\nexport interface AddCommentProps {\n  onSubmit: (comment: Pick<Comment, \"author\" | \"content\">) => void;\n}\nexport const AddComment = ({ onSubmit }: AddCommentProps) => {\n  const [comment, setComment] = useState(\"\");\n\n  return (\n    <Box\n      as=\"form\"\n      onSubmit={e => {\n        console.log({ e });\n        e.preventDefault();\n        onSubmit({ content: comment});\n      }}\n    >\n\n      <Label htmlFor=\"comment\">Comment</Label>\n      <Textarea\n        name=\"comment\"\n        id=\"comment\"\n        rows={2}\n        placeholder=\"Tell me what you think 😊\"\n        value={comment}\n        onChange={e => setComment(e.target.value)}\n        sx={{ mb: 3, fontFamily: \"body\" }}\n      />\n      <Button\n        sx={{\n          mb: 3,\n          ...((!comment) && {\n            bg: \"gray\",\n            pointerEvents: \"none\"\n          })\n        }}\n      >\n        Add comment\n      </Button>\n    </Box>\n  );\n};\n","/** @jsx jsx */\nimport { jsx, Container, BaseStyles, ThemeProvider } from \"theme-ui\";\nimport { useComments, CommentStatus } from \"use-comments\";\n\nimport theme from \"./theme\";\n\nimport { AddComment } from \"./AddComment\";\n\nconst formatDate = (dateStr: string) => {\n  const date = new Date(dateStr);\n  const seconds = Math.floor((new Date() - date) / 1000);\n\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years ago\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months ago\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days ago\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours ago\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes ago\";\n  }\n  if (Math.floor(seconds) === 0) {\n    return \"now\";\n  }\n  return Math.floor(seconds) + \" seconds ago\";\n};\n\nconst formatStatus = (status: CommentStatus) => {\n  switch (status) {\n    case \"added\":\n      return \"👌\";\n    case \"delivered-awaiting-approval\":\n      return \"🕑\";\n    case \"sending\":\n      return \"✉️\";\n  }\n};\n\nconst Comments = ({ postId }: { postId: string }) => {\n  const { comments, addComment, count, loading } = useComments(\n    \"https://casual-osprey-15.hasura.app/v1/graphql\",\n    postId\n  );\n\n  return (\n    <section sx={{ width: \"70%\" }}>\n      <AddComment onSubmit={addComment} />\n      <h3>{count === 1 ? \"1 comment\" : `${count} comments`}</h3>\n      {loading ? (\n        \"Loading...\"\n      ) : (\n        <div>\n          {comments.map(({ author, content, created_at, status }) => (\n            <article key={created_at}>\n              <div>\n                {`${author} ・ `}\n                <time dateTime={created_at}>{formatDate(created_at)}</time>\n                {status && ` ・ ${formatStatus(status)}`}\n              </div>\n              <p>{content}</p>\n            </article>\n          ))}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <BaseStyles>\n        <Container sx={{ p: [2, 4] }}>\n          <Comments postId=\"demo-app-theme-ui\" />\n        </Container>\n      </BaseStyles>\n    </ThemeProvider>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}